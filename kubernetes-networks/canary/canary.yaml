apiVersion: v1
kind: Namespace
metadata:
  name: canary
---
apiVersion: v1
kind: Pod
metadata:
  name: standard-pod-1
  namespace: canary
  labels:
    app: standard
spec:
  containers:
    - name: hello-app
      image: gcr.io/google-samples/hello-app:2.0
---
apiVersion: v1
kind: Pod
metadata:
  name: standard-pod-2
  namespace: canary
  labels:
    app: standard
spec:
  containers:
    - name: hello-app
      image: gcr.io/google-samples/hello-app:2.0
---
apiVersion: v1
kind: Pod
metadata:
  name: canary-pod-1
  namespace: canary
  labels:
    app: canary
spec:
  containers:
    - name: hello-app
      image: gcr.io/google-samples/hello-app:2.0
---
apiVersion: v1
kind: Service
metadata:
  name: standard-svc
  namespace: canary
spec:
  selector:
    app: standard
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: canary-svc
  namespace: canary
spec:
  selector:
    app: canary
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: standard-ingress
  namespace: canary
spec:
  rules:
    - host: someserver.com
      http:
        paths:
          - path: /
            backend:
              serviceName: standard-svc
              servicePort: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: canary-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-by-header: canary-header
    nginx.ingress.kubernetes.io/canary-by-header-value: "on"
    #nginx.ingress.kubernetes.io/canary-weight: "50"

  namespace: canary
spec:
  rules:
    - host: someserver.com
      http:
        paths:
          - path: /
            backend:
              serviceName: canary-svc
              servicePort: 80